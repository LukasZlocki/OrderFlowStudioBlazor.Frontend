@page "/ordersstatus"
@inject HttpClient http
@inject IModalService modal

@using OrderFlowStudio.Frontend.Data


<h1>Orders list</h1>

<button class="btn btn-dark" @onclick="GetOrders">Get orders!</button>

<div class="border-bottom border-white shadow rounded-lg" style="background-color: #ededed">
    <table style="width:50%" class="table table-striped border">
        <tr>
            <th>Order Nb</th>
            <th>Quantity</th>
            <th>Part Nb</th>
            <th>Description</th>
            <th>Status</th>
            <th>Details</th>
        </tr>
        <tbody>
            @foreach (var order in @orders)
            {
                <tr>
                    <td>@order.OrderNumber</td>
                    <td>@order.Quantity</td>
                    <td>@order.productDto.PartNumber</td>
                    <td>@order.productDto.ProductDescription</td>

            @if (order.raportDto.statusDto.StatusCode == 10)
            {
                <td><span class="badge badge-dark">Not in area</span></td>
            }
            @if (order.raportDto.statusDto.StatusCode == 15)
            {
                <td><span class="badge badge-dark">Not started</span></td>
            }

            @if (order.raportDto.statusDto.StatusCode == 20)
            {
                <td><span class="badge badge-primary">Masking</span></td>
            }
            @if (order.raportDto.statusDto.StatusCode == 30)
            {
                <td><span class="badge badge-primary">Processing</span></td>
            }
            @if (order.raportDto.statusDto.StatusCode == 40)
            {
                <td><span class="badge badge-danger">Correction</span></td>
            }
            @if (order.raportDto.statusDto.StatusCode == 50)
            {
                <td><span class="badge badge-danger">Correction finished</span></td>
            }
            @if (order.raportDto.statusDto.StatusCode == 60)
            {
                <td><span class="badge badge-success">Almost done</span></td>
            }
            @if (order.raportDto.statusDto.StatusCode == 70)
            {
                <td><span class="badge badge-success">Finished</span></td>
            }
            <td><button class="btn btn-dark" @onclick="@(() => ShowOrderStatusComponent(order.raportDto.Id))">Details</button></td>
            </tr>
            }
        </tbody>
    </table>
</div>


@code {
    List<Order> orders = new List<Order>();

    private async Task GetOrders()
    {
        orders = await http.GetJsonAsync<List<Order>>("http://localhost:6001/api/order");
    }

    // BLAZORED MODAL
    [CascadingParameter] public IModalService Modal { get; set; }

    void ShowOrderStatusComponent(int raportId)
    {
        var parameter = new ModalParameters();
        parameter.Add(nameof(OrderStatusComponent.RaportId), raportId);

        Modal.Show<OrderStatusComponent>("Order Status", parameter);
    }



    // LAZY WEB LOADING

}
